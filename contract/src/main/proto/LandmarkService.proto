syntax = "proto3";

// each class is defined in each own file, inside a common package
option java_multiple_files = true;
option java_package = "landmark_service";

package landmark_service;

service LandmarkDetectionService {
  // Checks if the service is alive
  rpc isAlive(Void) returns (Text);
  // Submits an image for monument detection
  rpc SubmitImage(stream ImageSubmissionChunk) returns (ImageSubmissionResponse);

  // Retrieves the result of a submitted image
  rpc GetSubmissionResult(GetSubmissionResultRequest) returns (GetSubmissionResultResponse);

  // Retrieves photo names and identified locations based on confidence threshold
  rpc GetPhotosByConfidence(GetPhotosByConfidenceRequest) returns (GetPhotosByConfidenceResponse);
}

message Void {

}

message Text {
  string msg=1;
}

message ImageSubmissionChunk {
  // Content of a part of the image file
  bytes chunk_data = 1;
}

message ImageSubmissionResponse {
  string request_id = 1;
}

message Landmark {
  string name = 1;

  double latitude = 2;
  double longitude = 3;

  double confidence = 4;
}

message LocationMap {
  string location_name = 1;

  bytes map_image = 2;
}

message GetSubmissionResultRequest {

  string request_id = 1;
}

message GetSubmissionResultResponse {

  repeated Landmark landmarks = 1;

  repeated LocationMap location_maps = 2;
}

message GetPhotosByConfidenceRequest {

  double confidence_threshold = 1;
}

message GetPhotosByConfidenceResponse {

  map<string, string> photo_locations = 1;
}

syntax = "proto3";

// each class is defined in each own file, inside a common package
option java_multiple_files = true;
option java_package = "landmark_service";

package landmark_service;

service LandmarkDetectionService {
  // Checks if the service is alive
  rpc isAlive(Void) returns (Text);
  // Submits an image for monument detection
  rpc SubmitImage(stream ImageSubmissionChunk) returns (ImageSubmissionResponse);
  // Retrieves the landmark list result of a submitted image
  rpc GetSubmissionResult(GetSubmissionResultRequest) returns (GetSubmissionResultResponse);
  // Retrieves the landmark list result of a submitted image filtered by confidence threshold
  rpc GetLandmarkListByConfidenceThresholdResult(GetSubmissionResultByConfidenceThresholdRequest) returns (GetLandmarkListByConfidenceThresholdResponse);
}

message Void {

}

message Text {
  string msg=1;

}

message ImageSubmissionChunk {
  // Content of a part of the image file
  bytes chunk_data = 1;
}

message ImageSubmissionResponse {
  string request_id = 1;
}

message GetSubmissionResultRequest {
  string request_id = 1;
}

message GetSubmissionResultByConfidenceThresholdRequest {
  double confidence = 1;
}

message Landmark {
  string name = 1;
  string latitude = 2;
  string longitude = 3;
  double confidence = 4;
}

message GetSubmissionResultResponse {
  repeated Landmark landmarks = 1;
  bytes map_image = 2;
}

message MonumentFilteredByConfidenceThreshold {
  string monument_image_name = 1;
  string identified_landmark = 2;
}

message GetLandmarkListResultResponse {
  repeated Landmark landmarks = 1;
}

message GetLandmarkListByConfidenceThresholdResponse {
  repeated MonumentFilteredByConfidenceThreshold monument = 1;
}